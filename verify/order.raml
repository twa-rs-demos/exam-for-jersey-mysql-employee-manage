#%RAML 0.8
title: supermarket-employee-manage-api
mediaType: application/json

/employees:
  get:
    description: As an admin I can get all employee information so that I can manage them.
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "array",
                "employees": {
                  "type": "object",
                  "properties": {
                    "employee_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "department_id": {
                      "type": "integer"
                    },
                    "role_id": {
                      "type": "integer"
                    },
                    "gender": {
                      "type": "integer"
                    },
                    "required": ["employee_url", "id", "name", "department_id", "gender", "role_id"]
                  }
                }
              }
            example: |
              [
                {
                  "id": 1,
                  "employee_url": "employees/1",
                  "name": "Jane Smith",
                  "department_id": 2,
                  "role_id": 3,
                  "gender": "male"
                }
              ]

  post:
    description: As an admin I can create an employee information so that the employee can be managed.
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "department_id": {
                "type": "integer"
              },
              "role_id": {
                "type": "integer"
              },
              "gender": {
                "type": "integer"
              },
              "required": ["name", "department_id", "gender", "role_id"]
            }
          }
        example: |
          {
            "name": "Jane Smith",
            "department_id": 2,
            "role_id": 3,
            "gender": "male"
          }

    responses:
      201:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "employee_url": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            example: |
              {
                "employee_uri": "employees/3"
              }

  /{id}:
    get:
      description: As an admin I can get an concrete employee information so I can manage his/her information.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "employee_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "department_id": {
                      "type": "integer"
                    },
                    "role_id": {
                      "type": "integer"
                    },
                    "gender": {
                      "type": "integer"
                    },
                    "required": ["employee_url", "id", "name", "department_id", "gender", "role_id"]
                  }
                }
              example: |
                {
                  "id": 1,
                  "employee_url": "employees/1",
                  "name": "Jane Smith",
                  "department_id": 2,
                  "role_id": 3,
                  "gender": "male"
                }

    delete: As an admin I can delete an employee when she/he resign.
      description: delete successfully.
      responses:
        204:

    put:
      description: As an admin I can update an employee information when she/he change role or dempartment.
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "department_id": {
                  "type": "integer"
                },
                "role_id": {
                  "type": "integer"
                },
                "gender": {
                  "type": "integer"
                },
                "required": ["name", "department_id", "gender", "role_id"]
              }
            }
          example: |
            {
              "name": "Jane Smith",
              "department_id": 1,
              "role_id": 2,
              "gender": "male"
            }
        responses:
          204:

/departments:
  get:
    description: As admin, I can get all the departments then I can get dempartments to manage.
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "totalCount": {
                  "type": "integer"
                },
                "departments": {
                  "type": "array",
                  "department": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "department_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "required": ["name", "id", "department_url"]
                    }
                  }
                }
              }
            example: |
              {
                "totalCount": 2,
                "departments": [
                  {
                    "department_url": "departments/1",
                    "name": "sport",
                    "id": 1
                  },
                  {
                    "department_url": "departments/2",
                    "name": "cloth",
                    "id": 2
                  }
                ]
              }

  post:
    description: As an admin, I can create a department, so that employee can be derected to this new department.
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        example: |
          {
            "name": "new_department"
          }
    responses:
      201:
        body:
          application/json:
           schema: |
             {
               "$schema": "http://json-schema.org/draft-04/schema#",
               "type": "object",
               "properties": {
                 "department_url": {
                   "type": "string",
                   "required": true
                 }
               }
             }
           example: |
             {
               "department_url": "departments/9"
             }
  /{id}:
    get:
      description: As an admin, I can get a concrete department detail so that I can view and update it.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "department_url": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "required": ["name", "id", "department_url"]
                  }
                }
              example: |
                {
                  "department_url": "departments/1",
                  "name": "sport",
                  "id": 1
                }
    delete:
      description: As an admin, I can delete a department when the department can not make money.
      responses:
        204:
          description: delete successfully
        412:
          description: delete fail, this department has employee working.
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "meaasge": {
                      "type": "string",
                      "required": true
                    }
                   }
                 }
              example: |
                {
                  "meaasge": "delete fail, this department has employee working."
                }
    put:
      description: As an admin, I can update a department information.
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true
                }
               }
             }
          example: |
            {
              "name": "Life Department"
            }
      responses:
        204:

/roles:
  get:
    description: As an admin, I can get all roles, so I can decide assign which role to a employee
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "totalCount": {
                    "type": "integer"
                  },
                  "roles": {
                    "type": "array",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "role_url": {
                        "type": "string"
                      },
                    "required": ["role_url", "title", "id"]
                    },
                  "required": ["totalCount", "roles"]
                  }
                }
              }
            example: |
              {
                "totalCount": 3,
                "roles": [
                  {
                    "id": 1,
                    "role_url": "roles/1",
                    "title": "manager"
                  },
                  {
                    "id": 2,
                    "role_url": "roles/2",
                    "title": "staff"
                  },
                  {
                    "id": 3,
                    "role_url": "roles/3",
                    "title": "monitor"
                  }
                ]
              }

  post:
    description: As an admin, I can create a role so that I can assign it to employee
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "required": true
              }
            }
          }
        example: |
          {
            "title": "assistant manager"
          }
    responses:
      201:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "role_url": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            example: |
              {
                "role_url": "roles/4"
              }
  /{id}:
    get:
      description: As an admin, I can get a concrete role then I can edit it.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "title"
                    },
                    "role_rul": {
                      "type": "string"
                    },
                    "required": ["role_url", "title", "id"]
                  }
                }
              example: |
                {
                  "id": 1,
                  "role_url": "roles/1",
                  "title": "manager"
                }

    delete:
      description: As an admin, I can delete a role then useless role can be deleted.
      responses:
        204:
          description: delete successfully.
        412:
          description: delete fail, this role had been assign to employees.
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "meaasge": {
                      "type": "string",
                      "required": true
                    }
                   }
                 }
              example: |
                {
                  "meaasge": "delete fail, this role had been assign to employees."
                }

    put:
      description: As an admin, I can update role detail.
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "required": true
                }
              }
            }
          example: |
            {
              "title": "president"
            }
      responses:
        204:
